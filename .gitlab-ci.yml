###############################
# Runners + global parts
###############################

# GitLab shared new Windows runners
# They currently not support Docker engine
#.windows_runner:
  #tags:
    #- shared-windows
    #- windows
    #- windows-1809

.windows_runner:
  tags:
    - docker-windows

stages:
  - build
  - test
  - deploy


###############################
# Linux
###############################

.build_linux:
  stage: build
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  script:
    - mkdir build
    - cd build
    - cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
                               -DCMAKE_MESSAGE_LOG_LEVEL=DEBUG
                               -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER $CMAKE_EXTRA_CACHE_ENTRIES
                               -DBUILD_TESTS=ON -DBUILD_CONAN_TESTS=ON -DBUILD_QT_TESTS=ON -DBUILD_REAL_INSTALL_TESTS=ON ..
    - make -j4
  artifacts:
    expire_in: 1 day
    paths:
      - build


.test_linux:
  stage: test
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  script:
    - cd build
    - ctest --output-on-failure --verbose .
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build



build_linux_gcc7_x86_64_debug:
  variables:
    C_COMPILER: gcc-7
    CXX_COMPILER: g++-7
    BUILD_TYPE: Debug
  extends: .build_linux

test_linux_gcc7_x86_64_debug:
  dependencies:
    - build_linux_gcc7_x86_64_debug
  extends: .test_linux


build_linux_clang6.0_x86_64_libc++_debug:
  variables:
    C_COMPILER: clang-6.0
    CXX_COMPILER: clang++-6.0
    BUILD_TYPE: Debug
    CMAKE_EXTRA_CACHE_ENTRIES: -DCMAKE_C_FLAGS_INIT=-stdlib=libc++ -DCMAKE_CXX_FLAGS_INIT=-stdlib=libc++
  extends: .build_linux

test_linux_clang6.0_x86_64_libc++_debug:
  dependencies:
    - build_linux_clang6.0_x86_64_libc++_debug
  extends: .test_linux

###############################
# Conan
###############################

.setup_conan:
  script:
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git

#.conan_create:
  #stage: build
  #script:
    #- !reference [.setup_conan, script]
    #- conan create . 0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE

.conan_createAndTest:
  stage: build
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan 0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE --test-folder None
    - conan test packaging/conan/test_package MdtCMakeModules/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/test_cmake MdtCMakeModules/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/test_cmake_find_package_multi MdtCMakeModules/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/test_cmakedeps MdtCMakeModules/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE

conan_linux_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .conan_createAndTest

conan_windows_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
  # TODO should not be required anymore once using conan_qt
  before_script:
    - $env:PATH += ";C:/Qt/5.14.2/mingw73_64"
  extends:
    - .conan_createAndTest
    - .windows_runner

# TODO: also deploy a source tarball (probably use CPack to create the tarball)

deploy_conan:
  stage: deploy
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan scandyna/testing
    - conan user --password ${CI_JOB_TOKEN} --remote scandyna ci_user
    - conan upload MdtCMakeModules/*@scandyna/testing --remote scandyna --all -c


###############################
# Windows
###############################

.build_windows:
  stage: build
  extends:
    - .windows_runner
  script:
    - mkdir build
    - cd build
    - echo "$BUILD_TYPE"
    - cmake -G"$CMAKE_GENERATOR" $CMAKE_GENERATOR_EXTRA_ARGS "-DCMAKE_BUILD_TYPE=$env:BUILD_TYPE" -DWARNING_AS_ERROR=ON
            -DCMAKE_MESSAGE_LOG_LEVEL=DEBUG
            -DCMAKE_PREFIX_PATH="$QT_PREFIX_PATH"
            -DBUILD_TESTS=ON -DBUILD_CONAN_TESTS=ON -DBUILD_QT_TESTS=ON ..
    - cmake --build . --config $env:BUILD_TYPE -j4
  artifacts:
    expire_in: 1 day
    paths:
      - build


.test_windows:
  stage: test
  extends:
    - .windows_runner
  script:
    - cd build
    - ctest --output-on-failure --verbose --build-config $env:BUILD_TYPE .
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build



build_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    BUILD_TYPE: Debug
    CMAKE_GENERATOR: "MinGW Makefiles"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .build_windows

test_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_gcc7_x86_64_debug
  extends: .test_windows


build_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    BUILD_TYPE: Debug
    CMAKE_GENERATOR: "Visual Studio 16 2019"
    CMAKE_GENERATOR_EXTRA_ARGS: -Ax64
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .build_windows

test_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_msvc16_x86_64_debug
  extends: .test_windows

###############################
# API doc
###############################

build_api_doc:
  stage: build
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  script:
    - mkdir build
    - cd build
    - cmake -DBUILD_DOCS=ON ..
    - make documentation
  artifacts:
    expire_in: 1 day
    paths:
      - build


pages:
  stage: deploy
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  dependencies:
    - build_api_doc
  script:
    - mv build/doc/html public
  artifacts:
    paths:
      - public
