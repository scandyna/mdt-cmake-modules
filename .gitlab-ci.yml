#image: microsoft/nanoserver

default:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp:latest

stages:
  - build
  - test
  - deploy


.build_linux:
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
                               -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER $CMAKE_EXTRA_CACHE_ENTRIES
                               -DBUILD_TESTS=ON -DBUILD_CONAN_TESTS=ON -DBUILD_QT_TESTS=ON -DBUILD_DOCS=ON ..
    - make -j4
  artifacts:
    expire_in: 1 day
    paths:
      - build


.test_linux:
  stage: test
  script:
    - cd build
    - ctest --output-on-failure .


build_linux_gcc7_x86_64_debug:
  variables:
    C_COMPILER: gcc-7
    CXX_COMPILER: g++-7
    BUILD_TYPE: Debug
  extends: .build_linux

test_linux_gcc7_x86_64_debug:
  dependencies:
    - build_linux_gcc7_x86_64_debug
  extends: .test_linux


build_linux_clang6.0_x86_64_libc++_debug:
  variables:
    C_COMPILER: clang-6.0
    CXX_COMPILER: clang++-6.0
    BUILD_TYPE: Debug
    CMAKE_EXTRA_CACHE_ENTRIES: -DCMAKE_C_FLAGS_INIT=-stdlib=libc++ -DCMAKE_CXX_FLAGS_INIT=-stdlib=libc++
  extends: .build_linux

test_linux_clang6.0_x86_64_libc++_debug:
  dependencies:
    - build_linux_clang6.0_x86_64_libc++_debug
  extends: .test_linux



# TODO: also deploy a source tarball (probably use CPack to create the tarball)

deploy_conan:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  before_script:
    - conan user -p $BINTRAY_API_KEY -r scandyna scandyna
  script:
    - conan create . scandyna/testing
    - conan upload MdtCMakeModules/*@scandyna/testing -r scandyna --all -c


build_api_doc:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  script:
    - mkdir build
    - cd build
    - cmake -DBUILD_DOCS=ON ..
    - make documentation
  artifacts:
    expire_in: 1 day
    paths:
      - build


pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  dependencies:
    - build_api_doc
  script:
    - mv build/doc/html public
  artifacts:
    paths:
      - public
